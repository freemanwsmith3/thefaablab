{"version":3,"sources":["src/XGrid.js"],"names":["XGrid","React","Component","getTickDomain","props","xScale","propsWithDefaults","defaultProps","xTickDomain","render","height","tickCount","lineClassName","lineStyle","spacingTop","spacingBottom","spacingLeft","spacingRight","ticks","className","map","tick","i","value","style","key","width","PropTypes","number","func","nice","bool","array","string","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAEe,MAAMA,KAAN,SAAoBC,eAAMC,SAA1B,CAAoC;AAoBjD,SAAOC,aAAP,CAAqBC,KAArB,EAA4B;AAC1B,QAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACnB,UAAMC,iBAAiB,GAAG,uBAAS,EAAT,EAAaF,KAAb,EAAoBJ,KAAK,CAACO,YAA1B,CAA1B;AACA,WAAO;AACLC,MAAAA,WAAW,EAAE,0BAAcF,iBAAiB,CAACD,MAAhC,EAAwCC,iBAAxC;AADR,KAAP;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,MADI;AAEJL,MAAAA,MAFI;AAGJM,MAAAA,SAHI;AAIJC,MAAAA,aAJI;AAKJC,MAAAA,SALI;AAMJC,MAAAA,UANI;AAOJC,MAAAA,aAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUF,KAAKb,KAVT;AAWA,UAAMc,KAAK,GAAG,KAAKd,KAAL,CAAWc,KAAX,IAAoB,0BAAcb,MAAd,EAAsB,IAAtB,EAA4BM,SAA5B,CAAlC;AACA,UAAMQ,SAAS,GAAI,uBAAsBP,aAAa,IAAI,EAAG,EAA7D;AAEA,wBACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAgC,qBAAY;AAA5C,OACGM,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,0BACE,6BAAC,cAAD,EACM;AACFZ,QAAAA,MADE;AAEFL,QAAAA,MAFE;AAGFc,QAAAA,SAHE;AAIFL,QAAAA,UAJE;AAKFC,QAAAA,aALE;AAMFC,QAAAA,WANE;AAOFC,QAAAA,YAPE;AAQFM,QAAAA,KAAK,EAAEF,IARL;AASFG,QAAAA,KAAK,EAAEX,SATL;AAUFY,QAAAA,GAAG,EAAG,eAAcH,CAAE;AAVpB,OADN,CADF;AAgBD,KAjBA,CADH,CADF;AAsBD;;AAjEgD;;;;gBAA9BtB,K,eACA;AACjB0B,EAAAA,KAAK,EAAEC,mBAAUC,MADA;AAEjBlB,EAAAA,MAAM,EAAEiB,mBAAUC,MAFD;AAGjBvB,EAAAA,MAAM,EAAEsB,mBAAUE,IAHD;AAIjBf,EAAAA,UAAU,EAAEa,mBAAUC,MAJL;AAKjBb,EAAAA,aAAa,EAAEY,mBAAUC,MALR;AAMjBZ,EAAAA,WAAW,EAAEW,mBAAUC,MANN;AAOjBX,EAAAA,YAAY,EAAEU,mBAAUC,MAPP;AAQjBE,EAAAA,IAAI,EAAEH,mBAAUI,IARC;AASjBb,EAAAA,KAAK,EAAES,mBAAUK,KATA;AAUjBrB,EAAAA,SAAS,EAAEgB,mBAAUC,MAVJ;AAWjBhB,EAAAA,aAAa,EAAEe,mBAAUM,MAXR;AAYjBpB,EAAAA,SAAS,EAAEc,mBAAUO;AAZJ,C;;gBADAlC,K,kBAeG;AACpB8B,EAAAA,IAAI,EAAE,IADc;AAEpBjB,EAAAA,SAAS,EAAE;AAFS,C","sourcesContent":["import React from 'react';\nimport defaults from 'lodash/defaults';\nimport PropTypes from 'prop-types';\n\nimport { getScaleTicks, getTickDomain } from './utils/Scale';\nimport XLine from './XLine';\n\nexport default class XGrid extends React.Component {\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    xScale: PropTypes.func,\n    spacingTop: PropTypes.number,\n    spacingBottom: PropTypes.number,\n    spacingLeft: PropTypes.number,\n    spacingRight: PropTypes.number,\n    nice: PropTypes.bool,\n    ticks: PropTypes.array,\n    tickCount: PropTypes.number,\n    lineClassName: PropTypes.string,\n    lineStyle: PropTypes.object,\n  };\n  static defaultProps = {\n    nice: true,\n    lineStyle: {},\n  };\n\n  static getTickDomain(props) {\n    if (!props.xScale) return;\n    const propsWithDefaults = defaults({}, props, XGrid.defaultProps);\n    return {\n      xTickDomain: getTickDomain(propsWithDefaults.xScale, propsWithDefaults),\n    };\n  }\n\n  render() {\n    const {\n      height,\n      xScale,\n      tickCount,\n      lineClassName,\n      lineStyle,\n      spacingTop,\n      spacingBottom,\n      spacingLeft,\n      spacingRight,\n    } = this.props;\n    const ticks = this.props.ticks || getScaleTicks(xScale, null, tickCount);\n    const className = `rct-chart-grid-line ${lineClassName || ''}`;\n\n    return (\n      <g className=\"rct-chart-grid-x\" aria-hidden=\"true\">\n        {ticks.map((tick, i) => {\n          return (\n            <XLine\n              {...{\n                height,\n                xScale,\n                className,\n                spacingTop,\n                spacingBottom,\n                spacingLeft,\n                spacingRight,\n                value: tick,\n                style: lineStyle,\n                key: `grid-x-line-${i}`,\n              }}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n"],"file":"XGrid.js"}