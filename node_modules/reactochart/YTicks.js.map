{"version":3,"sources":["src/YTicks.js"],"names":["YTicks","React","Component","getTickDomain","props","yScale","propsWithDefaults","defaultProps","yTickDomain","getMargin","tickLength","position","placement","zeroMargin","marginTop","marginBottom","marginLeft","marginRight","render","width","tickCount","tickStyle","tickClassName","spacingLeft","spacingRight","ticks","className","transform","map","tick","i","y1","x2","x1","y2","style","key","PropTypes","number","func","oneOf","array","object","string","nice","bool"],"mappings":"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","sourcesContent":["import defaults from 'lodash/defaults';\nimport capitalize from 'lodash/capitalize';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getScaleTicks, getTickDomain } from './utils/Scale';\n\nexport default class YTicks extends React.Component {\n  static propTypes = {\n    /**\n     * Width of chart - provided by XYPlot.\n     */\n    width: PropTypes.number,\n    /**\n     * D3 scale for Y axis - provided by XYPlot.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Position of y ticks. Accepted options are \"left\" or \"right\".\n     */\n    position: PropTypes.oneOf(['left', 'right']),\n    /**\n     * Placement of ticks in regards to the y axis. Accepted options are \"before\" or \"after\".\n     */\n    placement: PropTypes.oneOf(['before', 'after']),\n    /**\n     * Custom ticks to display.\n     */\n    ticks: PropTypes.array,\n    /**\n     * Number of ticks on axis.\n     */\n    tickCount: PropTypes.number,\n    tickLength: PropTypes.number,\n    /**\n     * Inline style object to be applied to each tick.\n     */\n    tickStyle: PropTypes.object,\n    /**\n     * Class attribute to be applied to each tick.\n     */\n    tickClassName: PropTypes.string,\n    /**\n     * Spacing - provided by XYPlot and used to determine the placement of the ticks given spacingLeft.\n     */\n    spacingLeft: PropTypes.number,\n    /**\n     * Spacing - provided by XYPlot and used to determine the placement of the ticks given spacingRight.\n     */\n    spacingRight: PropTypes.number,\n    /**\n     * Round ticks to capture extent of given y domain from XYPlot.\n     */\n    nice: PropTypes.bool,\n  };\n  static defaultProps = {\n    position: 'left',\n    nice: true,\n    tickLength: 5,\n    tickStyle: {},\n  };\n\n  static getTickDomain(props) {\n    if (!props.yScale) {\n      return;\n    }\n\n    const propsWithDefaults = defaults({}, props, YTicks.defaultProps);\n    return { yTickDomain: getTickDomain(props.yScale, propsWithDefaults) };\n  }\n\n  static getMargin(props) {\n    const { tickLength, position } = defaults({}, props, YTicks.defaultProps);\n    const placement =\n      props.placement || (position === 'left' ? 'before' : 'after');\n    const zeroMargin = {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0,\n    };\n\n    if (\n      (position === 'left' && placement === 'after') ||\n      (position === 'right' && placement === 'before')\n    )\n      return zeroMargin;\n\n    return defaults(\n      { [`margin${capitalize(position)}`]: tickLength || 0 },\n      zeroMargin,\n    );\n  }\n\n  render() {\n    const {\n      width,\n      yScale,\n      tickCount,\n      position,\n      tickLength,\n      tickStyle,\n      tickClassName,\n      spacingLeft,\n      spacingRight,\n    } = this.props;\n    const placement =\n      this.props.placement || (position === 'left' ? 'before' : 'after');\n    const ticks = this.props.ticks || getScaleTicks(yScale, null, tickCount);\n    const className = `rct-chart-tick rct-chart-tick-y ${tickClassName || ''}`;\n    const transform =\n      position === 'right'\n        ? `translate(${width + (spacingRight || 0)}, 0)`\n        : `translate(${-spacingLeft || 0}, 0)`;\n\n    return (\n      <g className=\"rct-chart-ticks-y\" transform={transform} aria-hidden=\"true\">\n        {ticks.map((tick, i) => {\n          const y1 = yScale(tick);\n          const x2 = placement === 'before' ? -tickLength : tickLength;\n\n          return (\n            <line\n              {...{\n                x1: 0,\n                x2,\n                y1,\n                y2: y1,\n                className,\n                style: tickStyle,\n                key: `tick-${i}`,\n              }}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n"],"file":"YTicks.js"}