{"version":3,"sources":["src/MeasuredValueLabel.js"],"names":["MeasuredValueLabel","React","Component","getLabel","props","value","format","style","defaultProps","labelStr","labelWithStyle","Object","assign","text","measured","height","width","render","passedProps","Children","count","children","PropTypes","any","func","identity","fontFamily","fontSize","lineHeight","textAnchor"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEe,MAAMA,kBAAN,SAAiCC,eAAMC,SAAvC,CAAiD;AAiB9D,SAAOC,QAAP,CAAgBC,KAAhB,EAAuB;AACrB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoBF,KAA1B;AACA,UAAMG,KAAK,GAAG,uBAASH,KAAK,CAACG,KAAf,EAAsBP,kBAAkB,CAACQ,YAAnB,CAAgCD,KAAtD,CAAd;AACA,UAAME,QAAQ,GAAGH,MAAM,CAACD,KAAD,CAAvB;AACA,UAAMK,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,KAAd,EAAkCF,KAAlC,CAAvB;AACA,UAAMO,QAAQ,GAAG,0BAAYJ,cAAZ,CAAjB;AAEA,WAAO;AACLL,MAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELQ,MAAAA,IAAI,EAAEC,QAAQ,CAACD,IAFV;AAGLE,MAAAA,MAAM,EAAED,QAAQ,CAACC,MAAT,CAAgBV,KAHnB;AAILW,MAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAT,CAAeX;AAJjB,KAAP;AAMD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoB,KAAKF,KAA/B;AACA,UAAMc,WAAW,GAAG,mBAAK,KAAKd,KAAV,EAAiB,CAAC,OAAD,EAAU,QAAV,CAAjB,CAApB;AAEA,wBACE,qCAAUc,WAAV,EACGjB,eAAMkB,QAAN,CAAeC,KAAf,CAAqB,KAAKhB,KAAL,CAAWiB,QAAhC,IACG,KAAKjB,KAAL,CAAWiB,QADd,GAEGf,MAAM,CAACD,KAAD,CAHZ,CADF;AAOD;;AA3C6D;;;;gBAA3CL,kB,eACA;AACjBK,EAAAA,KAAK,EAAEiB,mBAAUC,GADA;AAEjBjB,EAAAA,MAAM,EAAEgB,mBAAUE,IAFD;AAGjBH,EAAAA,QAAQ,EAAEC,mBAAUC;AAHH,C;;gBADAvB,kB,kBAOG;AACpBM,EAAAA,MAAM,EAAEmB,iBADY;AAEpBlB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,UAAU,EAAE,uBADP;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLC,IAAAA,UAAU,EAAE,CAHP;AAILC,IAAAA,UAAU,EAAE;AAJP;AAFa,C","sourcesContent":["import React from 'react';\nimport defaults from 'lodash/defaults';\nimport omit from 'lodash/omit';\nimport identity from 'lodash/identity';\nimport measureText from './utils/measureText';\nimport PropTypes from 'prop-types';\n\nexport default class MeasuredValueLabel extends React.Component {\n  static propTypes = {\n    value: PropTypes.any,\n    format: PropTypes.func,\n    children: PropTypes.any,\n  };\n\n  static defaultProps = {\n    format: identity,\n    style: {\n      fontFamily: 'Helvetica, sans-serif',\n      fontSize: '20px',\n      lineHeight: 1,\n      textAnchor: 'middle',\n    },\n  };\n\n  static getLabel(props) {\n    const { value, format } = props;\n    const style = defaults(props.style, MeasuredValueLabel.defaultProps.style);\n    const labelStr = format(value);\n    const labelWithStyle = Object.assign({ text: labelStr }, style);\n    const measured = measureText(labelWithStyle);\n\n    return {\n      value: props.value,\n      text: measured.text,\n      height: measured.height.value,\n      width: measured.width.value,\n    };\n  }\n\n  render() {\n    const { value, format } = this.props;\n    const passedProps = omit(this.props, ['value', 'format']);\n\n    return (\n      <text {...passedProps}>\n        {React.Children.count(this.props.children)\n          ? this.props.children\n          : format(value)}\n      </text>\n    );\n  }\n}\n"],"file":"MeasuredValueLabel.js"}