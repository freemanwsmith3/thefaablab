{"version":3,"sources":["src/MarkerLineChart.js"],"names":["getTickType","props","xEnd","yEnd","horizontal","console","warn","MarkerLineChart","React","Component","e","d","onMouseEnterLine","onMouseMoveLine","onMouseLeaveLine","i","onMouseEnter","onMouseMove","onMouseLeave","map","eventName","callback","x","y","xScale","yScale","lineClassName","lineStyle","xVal","yVal","xEndVal","yEndVal","x1","y1","x2","y2","key","every","val","isFinite","lineLength","getSpacing","tickType","spacingTop","spacingRight","spacingBottom","spacingLeft","data","xDomain","yDomain","P","markDomain","markScale","markAccessor","markDataDomain","domainHead","domainTail","sort","dataDomainHead","dataDomainTail","spacingTail","spacingHead","getDomain","xScaleType","yScaleType","rangeAxis","rangeStartAccessor","rangeEndAccessor","rangeDataType","shouldComponentUpdate","nextProps","shouldUpdate","render","renderRangeValueLine","renderValueValueLine","PropTypes","array","isRequired","CustomPropTypes","valueOrAccessor","bool","number","string","func","oneOfType","object"],"mappings":"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","sourcesContent":["import isUndefined from 'lodash/isUndefined';\nimport first from 'lodash/first';\nimport last from 'lodash/last';\nimport clamp from 'lodash/clamp';\nimport isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { methodIfFuncProp, bindTrailingArgs } from './util.js';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport {\n  domainFromData,\n  domainFromRangeData,\n  getValue,\n  makeAccessor2,\n} from './utils/Data';\nimport { dataTypeFromScaleType } from './utils/Scale';\nimport xyPropsEqual from './utils/xyPropsEqual';\n\nfunction getTickType(props) {\n  const { xEnd, yEnd, horizontal } = props;\n  // warn if a range is passed for the dependent variable, which is expected to be a value\n  if (\n    (!horizontal && !isUndefined(yEnd)) ||\n    (horizontal && !isUndefined(xEnd))\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Warning: MarkerLineChart can only show the independent variable as a range, not the dependent variable.',\n    );\n  }\n\n  if ((!horizontal && !isUndefined(xEnd)) || (horizontal && !isUndefined(yEnd)))\n    return 'RangeValue';\n\n  return 'ValueValue';\n}\n\n/**\n * `MarkerLineChart` is similar to a bar chart,\n * except that it just draws a line at the data value, rather than a full bar.\n * If the independent variable is a range, the length of the line will represent that range,\n * otherwise all lines will be the same length.\n * The dependent variable must be a single value, not a range.\n */\n\nexport default class MarkerLineChart extends React.Component {\n  static propTypes = {\n    /**\n     * Array of data objects. One marker line will be rendered per datum in the array.\n     */\n    data: PropTypes.array.isRequired,\n    /**\n     * Accessor function for marker line's X values, called once per line (datum), or a single value to be used for all marker lines.\n     * If `horizontal` is `false`, this gets the *independent* variable value on which the line is centered.\n     * If `horizontal` is `true`, this gets the start (minimum value) of the *dependent* variable.\n     */\n    x: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for marker line's Y values, called once per line (datum), or a single value to be used for all marker lines.\n     * If `horizontal` is `false`, this gets the start (minimum value) of the *dependent* variable.\n     * If `horizontal` is `true`, this gets the *independent* variable value on which the line is centered.\n     */\n    y: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for the end (maximum X-values) of the *dependent* variable, which is where the marker line is rendered,\n     * or a single value to be used for all marker lines.\n     * Should only be passed when `horizontal` is `true` (ignored otherwise).\n     */\n    xEnd: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for the end (maximum Y-values) of the *dependent* variable range which is where the marker line is rendered,\n     * or a single value to be used for all marker lines.\n     * Should only be passed when `horizontal` is `false` (ignored otherwise).\n     */\n    yEnd: CustomPropTypes.valueOrAccessor,\n    /**\n     * Boolean which determines whether the chart will be horizontal.\n     * When `true` the X-axis will be treated as the dependent axis.\n     */\n    horizontal: PropTypes.bool,\n    /**\n     * Length of the marker line.\n     */\n    lineLength: PropTypes.number,\n    /**\n     * D3 scale type for X axis - provided by XYPlot.\n     */\n    xScaleType: PropTypes.string,\n    /**\n     * D3 scale type for Y axis - provided by XYPlot.\n     */\n    yScaleType: PropTypes.string,\n    /**\n     * D3 scale for X axis - provided by XYPlot.\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for Y axis - provided by XYPlot.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Class attribute to be applied to the line path,\n     * or an accessor function which returns a class.\n     */\n    lineClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * Inline style object to be applied to each marker line,\n     * or an accessor function which returns a style object.\n     */\n    lineStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters a marker line.\n     */\n    onMouseEnterLine: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within a marker line.\n     */\n    onMouseMoveLine: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves a marker line.\n     */\n    onMouseLeaveLine: PropTypes.func,\n  };\n  static defaultProps = {\n    horizontal: false,\n    lineLength: 10,\n    lineClassName: '',\n    lineStyle: {},\n  };\n\n  static getSpacing(props) {\n    const tickType = getTickType(props);\n    // no spacing for rangeValue marker charts since line start and end are set explicitly\n    if (tickType === 'RangeValue')\n      return {\n        spacingTop: 0,\n        spacingRight: 0,\n        spacingBottom: 0,\n        spacingLeft: 0,\n      };\n\n    const {\n      lineLength,\n      horizontal,\n      data,\n      xDomain,\n      yDomain,\n      xScale,\n      yScale,\n      x,\n      y,\n    } = props;\n    const P = lineLength / 2; // padding\n    const markDomain = horizontal ? yDomain : xDomain;\n    const markScale = horizontal ? yScale : xScale;\n    const markAccessor = horizontal ? makeAccessor2(y) : makeAccessor2(x);\n    const markDataDomain = domainFromData(data, markAccessor);\n\n    // find the edges of the tick domain, and map them through the scale function\n    const [domainHead, domainTail] = [first(markDomain), last(markDomain)]\n      .map(markScale)\n      .sort(); // sort the pixel values return by the domain extents\n\n    // find the edges of the data domain, and map them through the scale function\n    const [dataDomainHead, dataDomainTail] = [\n      first(markDataDomain),\n      last(markDataDomain),\n    ]\n      .map(markScale)\n      .sort(); // sort the pixel values return by the domain extents\n\n    // find the necessary spacing (based on bar width) to push the bars completely inside the tick domain\n    const [spacingTail, spacingHead] = [\n      clamp(P - (domainTail - dataDomainTail), 0, P),\n      clamp(P - (dataDomainHead - domainHead), 0, P),\n    ];\n\n    if (horizontal) {\n      return {\n        spacingTop: spacingHead,\n        spacingBottom: spacingTail,\n        spacingLeft: 0,\n        spacingRight: 0,\n      };\n    }\n    return {\n      spacingTop: 0,\n      spacingBottom: 0,\n      spacingLeft: spacingHead,\n      spacingRight: spacingTail,\n    };\n  }\n\n  static getDomain(props) {\n    if (getTickType(props) === 'RangeValue') {\n      // set range domain for range type\n      const {\n        data,\n        x,\n        xEnd,\n        y,\n        yEnd,\n        xScaleType,\n        yScaleType,\n        horizontal,\n      } = props;\n\n      // only have to specify range axis domain, other axis uses default domainFromData\n      // in this chart type, the range axis, if there is one, is always the *independent* variable\n      const rangeAxis = horizontal ? 'y' : 'x';\n      const rangeStartAccessor = horizontal\n        ? makeAccessor2(y)\n        : makeAccessor2(x);\n      const rangeEndAccessor = horizontal\n        ? makeAccessor2(yEnd)\n        : makeAccessor2(xEnd);\n      const rangeDataType = dataTypeFromScaleType(\n        horizontal ? yScaleType : xScaleType,\n      );\n\n      return {\n        [`${rangeAxis}Domain`]: domainFromRangeData(\n          data,\n          rangeStartAccessor,\n          rangeEndAccessor,\n          rangeDataType,\n        ),\n      };\n    }\n\n    return {};\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, []);\n    return shouldUpdate;\n  }\n\n  onMouseEnterLine = (e, d) => {\n    this.props.onMouseEnterLine(e, d);\n  };\n  onMouseMoveLine = (e, d) => {\n    this.props.onMouseMoveLine(e, d);\n  };\n  onMouseLeaveLine = (e, d) => {\n    this.props.onMouseLeaveLine(e, d);\n  };\n\n  renderRangeValueLine = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      'onMouseEnterLine',\n      'onMouseMoveLine',\n      'onMouseLeaveLine',\n    ].map(eventName => {\n      // partially apply this line's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return isFunction(callback) ? bindTrailingArgs(callback, d) : null;\n    });\n\n    const {\n      x,\n      xEnd,\n      y,\n      yEnd,\n      horizontal,\n      xScale,\n      yScale,\n      lineClassName,\n      lineStyle,\n    } = this.props;\n    const xVal = xScale(makeAccessor2(x)(d));\n    const yVal = yScale(makeAccessor2(y)(d));\n    const xEndVal = isUndefined(xEnd) ? 0 : xScale(makeAccessor2(xEnd)(d));\n    const yEndVal = isUndefined(yEnd) ? 0 : yScale(makeAccessor2(yEnd)(d));\n    const [x1, y1] = [xVal, yVal];\n    const x2 = horizontal ? xVal : xEndVal;\n    const y2 = horizontal ? yEndVal : yVal;\n    const key = `marker-line-${i}`;\n\n    if (![x1, x2, y1, y2].every(val => val !== null && isFinite(val)))\n      return null;\n    return (\n      <line\n        className={`${getValue(lineClassName, d, i)}`}\n        style={getValue(lineStyle, d, i)}\n        {...{ x1, x2, y1, y2, key, onMouseEnter, onMouseMove, onMouseLeave }}\n      />\n    );\n  };\n\n  renderValueValueLine = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      'onMouseEnterLine',\n      'onMouseMoveLine',\n      'onMouseLeaveLine',\n    ].map(eventName => {\n      // partially apply this line's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return isFunction(callback) ? bindTrailingArgs(callback, d) : null;\n    });\n\n    const {\n      x,\n      y,\n      horizontal,\n      lineLength,\n      xScale,\n      yScale,\n      lineClassName,\n      lineStyle,\n    } = this.props;\n    const xVal = xScale(makeAccessor2(x)(d));\n    const yVal = yScale(makeAccessor2(y)(d));\n    const x1 = !horizontal ? xVal - lineLength / 2 : xVal;\n    const x2 = !horizontal ? xVal + lineLength / 2 : xVal;\n    const y1 = !horizontal ? yVal : yVal - lineLength / 2;\n    const y2 = !horizontal ? yVal : yVal + lineLength / 2;\n    const key = `marker-line-${i}`;\n\n    if (![x1, x2, y1, y2].every(val => val !== null && isFinite(val)))\n      return null;\n    return (\n      <line\n        className={`${getValue(lineClassName, d, i)}`}\n        style={getValue(lineStyle, d, i)}\n        {...{ x1, x2, y1, y2, key, onMouseEnter, onMouseMove, onMouseLeave }}\n      />\n    );\n  };\n\n  render() {\n    const tickType = getTickType(this.props);\n    return (\n      <g className=\"rct-marker-line-chart\" aria-hidden=\"true\">\n        {tickType === 'RangeValue'\n          ? this.props.data.map(this.renderRangeValueLine)\n          : this.props.data.map(this.renderValueValueLine)}\n      </g>\n    );\n  }\n}\n"],"file":"MarkerLineChart.js"}