{"version":3,"sources":["../src/utils/Label.js"],"names":["getDefaultFormats","scaleType","defaultTimeFormats","defaultNumberFormats","identity","makeLabelFormatters","formats","map","format","value","checkLabelsDistinct","labels","labelStrs","length","checkRangesOverlap","a","b","every","range","Array","isArray","rangeVal","isFinite","Error","countRangeOverlaps","ranges","reduce","sum","i","prevRange","getLabelXRange","scale","label","anchor","anchorOffsets","start","middle","end","x1","width","getLabelYRange","top","bottom","y1","height","getLabelXOverhang","labelLeft","labelRight","overhangLeft","Math","ceil","max","overhangRight","getLabelYOverhang","labelTop","labelBottom","overhangTop","overhangBottom","getLabelsXOverhang","left","right","thisLeft","thisRight","getLabelsYOverhang","thisTop","thisBottom"],"mappings":"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","sourcesContent":["import isString from 'lodash/isString';\nimport map from 'lodash/map';\nimport uniq from 'lodash/uniq';\nimport tail from 'lodash/tail';\nimport min from 'lodash/min';\nimport max from 'lodash/max';\nimport reduce from 'lodash/reduce';\nimport identity from 'lodash/identity';\nimport { timeFormat } from 'd3-time-format';\nimport { format as numberFormat } from 'd3-format';\n\nexport function getDefaultFormats(scaleType) {\n  const defaultTimeFormats = ['%Y', \"'%y\", '%b %Y', '%m/%Y'];\n  // Number format examples for a value of 1234.55555\n  // https://github.com/d3/d3-format\n  const defaultNumberFormats = [\n    '~s', // 1.23456k\n    ',d', // 1,235\n    '.1~f', // 1234.6\n    '.2~f', // 1234.56\n    '.4~f', // 1234.5556\n    '.6~f', // 1234.555555\n  ];\n\n  return scaleType === 'ordinal'\n    ? [identity]\n    : scaleType === 'time'\n    ? defaultTimeFormats\n    : defaultNumberFormats;\n}\n\nexport function makeLabelFormatters(formats, scaleType) {\n  return formats.map(format => {\n    if (!isString(format)) return format;\n    return scaleType === 'time'\n      ? value => timeFormat(format)(value)\n      : value => numberFormat(format)(value);\n  });\n}\n\nexport function checkLabelsDistinct(labels) {\n  // given a set of label objects with text properties,\n  // return true iff each label has distinct text (ie. no duplicate label texts)\n  const labelStrs = map(labels, 'text');\n  return uniq(labelStrs).length === labelStrs.length;\n}\n\nexport function checkRangesOverlap(a, b) {\n  // given two number or date ranges of the form [start, end],\n  // returns true if the ranges overlap\n  if (\n    ![a, b].every(\n      range =>\n        Array.isArray(range) &&\n        range.length === 2 &&\n        range.every(rangeVal => rangeVal !== null && isFinite(rangeVal)) &&\n        range[0] <= range[1],\n    )\n  )\n    throw new Error(\n      'checkRangesOverlap expects 2 range arrays with 2 numbers each, first <= second',\n    );\n\n  return a[0] <= b[1] && b[0] <= a[1];\n}\n\nexport function countRangeOverlaps(ranges) {\n  // given a list of ranges of the form [[start, end], ...]\n  // counts the number of adjacent ranges which touch or overlap each other\n  // todo: instead of counting overlaps, sum the amount by which they overlap & choose least overlap\n\n  return tail(ranges).reduce((sum, range, i) => {\n    const prevRange = ranges[i]; // (not [i-1], _.tail skips first range)\n    return checkRangesOverlap(prevRange, range) ? sum + 1 : sum;\n  }, 0);\n}\n\nexport function getLabelXRange(scale, label, anchor = 'middle') {\n  const anchorOffsets = { start: 0, middle: -0.5, end: -1 };\n  const x1 = scale(label.value) + (anchorOffsets[anchor] || 0) * label.width;\n  return [x1, x1 + label.width];\n}\n\nexport function getLabelYRange(scale, label, anchor = 'middle') {\n  const anchorOffsets = { top: 0, middle: -0.5, bottom: -1 };\n  const y1 = scale(label.value) + (anchorOffsets[anchor] || 0) * label.height;\n  return [y1, y1 + label.height];\n}\n\nexport function getLabelXOverhang(scale, label, anchor = 'middle') {\n  const [labelLeft, labelRight] = getLabelXRange(scale, label, anchor);\n  const overhangLeft = Math.ceil(Math.max(min(scale.range()) - labelLeft, 0));\n  const overhangRight = Math.ceil(Math.max(labelRight - max(scale.range()), 0));\n  return [overhangLeft, overhangRight];\n}\n\nexport function getLabelYOverhang(scale, label, anchor = 'middle') {\n  const [labelTop, labelBottom] = getLabelYRange(scale, label, anchor);\n  const overhangTop = Math.ceil(Math.max(min(scale.range()) - labelTop, 0));\n  const overhangBottom = Math.ceil(\n    Math.max(labelBottom - max(scale.range()), 0),\n  );\n  return [overhangTop, overhangBottom];\n}\n\nexport function getLabelsXOverhang(scale, labels, anchor = 'middle') {\n  return reduce(\n    labels,\n    ([left, right], label) => {\n      const [thisLeft, thisRight] = getLabelXOverhang(scale, label, anchor);\n      return [Math.max(left, thisLeft), Math.max(right, thisRight)];\n    },\n    [0, 0],\n  );\n}\n\nexport function getLabelsYOverhang(scale, labels, anchor = 'middle') {\n  return reduce(\n    labels,\n    ([top, bottom], label) => {\n      const [thisTop, thisBottom] = getLabelYOverhang(scale, label, anchor);\n      return [Math.max(top, thisTop), Math.max(bottom, thisBottom)];\n    },\n    [0, 0],\n  );\n}\n"],"file":"Label.js"}