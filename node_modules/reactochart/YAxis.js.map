{"version":3,"sources":["src/YAxis.js"],"names":["getMouseOptions","getMouseAxisOptions","bind","YAxis","React","Component","event","onMouseMoveAxis","yScale","props","options","onMouseEnterAxis","onMouseLeaveAxis","onMouseClickAxis","getTickDomain","propsWithDefaults","defaultProps","yTickDomain","getMargin","ticksProps","labelsProps","titleProps","margins","showTicks","push","YTicks","showTitle","title","YAxisTitle","showLabels","YAxisLabels","shouldComponentUpdate","nextProps","render","width","height","position","tickLength","titleDistance","labelDistance","showGrid","spacingTop","spacingBottom","spacingLeft","spacingRight","showLine","lineStyle","gridProps","distance","labelsMargin","axisLineX","handleOnMouseMove","handleOnMouseEnter","handleOnMouseLeave","handleOnClick","PropTypes","func","number","string","placement","nice","bool","ticks","array","tickCount","titleAlign","titleRotate","titleStyle","object","labelClassName","labelStyle","oneOfType","labelFormat","labelFormats","labels","labelOffset","tickClassName","tickStyle","gridLineClassName","gridLineStyle","onMouseClickLabel","onMouseEnterLabel","onMouseMoveLabel","onMouseLeaveLabel"],"mappings":"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","sourcesContent":["import defaults from 'lodash/defaults';\nimport isFunction from 'lodash/isFunction';\nimport upperFirst from 'lodash/upperFirst';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getAxisChildProps, getMouseAxisOptions } from './utils/Axis';\nimport { sumMargins } from './utils/Margin';\nimport { getTickDomain } from './utils/Scale';\nimport xyPropsEqual from './utils/xyPropsEqual';\nimport YAxisLabels from './YAxisLabels';\nimport YAxisTitle from './YAxisTitle';\nimport YGrid from './YGrid';\nimport YTicks from './YTicks';\n\nconst getMouseOptions = getMouseAxisOptions.bind(null, 'y');\n/**\n * `YAxis` is the vertical axis of the chart. `YAxis` is a wrapper around `YGrid`, `YTicks`,\n * `YAxisLabels`, and `YAxisTitle`. See their respective docs for prop documentation.\n */\nexport default class YAxis extends React.Component {\n  static propTypes = {\n    yScale: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    position: PropTypes.string,\n    placement: PropTypes.string,\n    /**\n     * Extends the y domain to start and end on rounded values,\n     * guaranteeing the original domain will be covered.\n     * See d3 docs for more information\n     */ nice: PropTypes.bool,\n    ticks: PropTypes.array,\n    tickCount: PropTypes.number,\n    /**\n     * Internal top spacing of YAxis, in pixels.\n     */ spacingTop: PropTypes.number,\n    /**\n     * Internal bottom spacing of YAxis, in pixels.\n     */ spacingBottom: PropTypes.number,\n    /**\n     * Internal left spacing of YAxis, in pixels.\n     */ spacingLeft: PropTypes.number,\n    /**\n     * Internal right spacing of YAxis, in pixels.\n     */ spacingRight: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showLabels: PropTypes.bool,\n    showTicks: PropTypes.bool,\n    showGrid: PropTypes.bool,\n    title: PropTypes.string,\n    titleDistance: PropTypes.number,\n    titleAlign: PropTypes.string,\n    titleRotate: PropTypes.bool,\n    titleStyle: PropTypes.object,\n    labelDistance: PropTypes.number,\n    labelClassName: PropTypes.string,\n    labelStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    labelFormat: PropTypes.func,\n    labelFormats: PropTypes.array,\n    labels: PropTypes.array,\n    /**\n     * Adds vertical offset (along the YAxis) to the labels\n     */ labelOffset: PropTypes.number,\n    tickLength: PropTypes.number,\n    tickClassName: PropTypes.string,\n    tickStyle: PropTypes.object,\n    gridLineClassName: PropTypes.string,\n    gridLineStyle: PropTypes.object,\n    onMouseClickLabel: PropTypes.func,\n    onMouseEnterLabel: PropTypes.func,\n    onMouseMoveLabel: PropTypes.func,\n    onMouseLeaveLabel: PropTypes.func,\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters the y axis.\n     */\n    onMouseEnterAxis: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves the y axis.\n     */ onMouseLeaveAxis: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within the y axis.\n     */ onMouseMoveAxis: PropTypes.func,\n    /**\n     * `click` event handler callback, called when user's mouse clicks on the y axis.\n     */ onMouseClickAxis: PropTypes.func,\n    /**\n     * Show Y Axis line\n     */\n    showLine: PropTypes.bool,\n    /**\n     * Inline style object to be applied to the Y Axis line\n     */ lineStyle: PropTypes.object,\n  };\n\n  static defaultProps = {\n    width: 400,\n    height: 250,\n    position: 'left',\n    nice: true,\n    showTitle: true,\n    showLabels: true,\n    showTicks: true,\n    showGrid: true,\n    tickLength: 5,\n    labelDistance: 3,\n    titleDistance: 5,\n    spacingTop: 0,\n    spacingBottom: 0,\n    spacingLeft: 0,\n    spacingRight: 0,\n    showLine: true,\n    lineStyle: {},\n  };\n\n  static getTickDomain(props) {\n    if (!props.yScale) return;\n    const propsWithDefaults = defaults({}, props, YAxis.defaultProps);\n    return {\n      yTickDomain: getTickDomain(propsWithDefaults.yScale, propsWithDefaults),\n    };\n  }\n\n  static getMargin(props) {\n    const { ticksProps, labelsProps, titleProps } = getAxisChildProps(props);\n    const margins = [];\n\n    if (props.showTicks) margins.push(YTicks.getMargin(ticksProps));\n\n    if (props.showTitle && props.title)\n      margins.push(YAxisTitle.getMargin(titleProps));\n\n    if (props.showLabels) margins.push(YAxisLabels.getMargin(labelsProps));\n\n    return sumMargins(margins, 'margin');\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return !xyPropsEqual(this.props, nextProps);\n  }\n\n  handleOnMouseMove = event => {\n    const { onMouseMoveAxis, yScale } = this.props;\n\n    if (!isFunction(onMouseMoveAxis)) {\n      return;\n    }\n\n    const options = getMouseOptions(event, yScale);\n    onMouseMoveAxis(options);\n  };\n\n  handleOnMouseEnter = event => {\n    const { onMouseEnterAxis, yScale } = this.props;\n\n    if (!isFunction(onMouseEnterAxis)) {\n      return;\n    }\n\n    const options = getMouseOptions(event, yScale);\n    onMouseEnterAxis(options);\n  };\n\n  handleOnMouseLeave = event => {\n    const { onMouseLeaveAxis, yScale } = this.props;\n\n    if (!isFunction(onMouseLeaveAxis)) {\n      return;\n    }\n\n    const options = getMouseOptions(event, yScale);\n    onMouseLeaveAxis(options);\n  };\n\n  handleOnClick = event => {\n    const { onMouseClickAxis, yScale } = this.props;\n\n    if (!isFunction(onMouseClickAxis)) {\n      return;\n    }\n\n    const options = getMouseOptions(event, yScale);\n    onMouseClickAxis(options);\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      position,\n      tickLength,\n      titleDistance,\n      labelDistance,\n      showTitle,\n      showLabels,\n      showTicks,\n      showGrid,\n      spacingTop,\n      spacingBottom,\n      spacingLeft,\n      spacingRight,\n      showLine,\n      lineStyle,\n    } = this.props;\n\n    const {\n      ticksProps,\n      gridProps,\n      labelsProps,\n      titleProps,\n    } = getAxisChildProps(this.props);\n\n    labelsProps.distance = labelDistance + (showTicks ? tickLength : 0);\n\n    if (showTitle && showLabels) {\n      // todo optimize so we don't generate labels twice\n      const labelsMargin = YAxisLabels.getMargin(labelsProps);\n      titleProps.distance =\n        titleDistance + labelsMargin[`margin${upperFirst(position)}`];\n    } else if (showTitle && showTicks) {\n      titleProps.distance = titleDistance + tickLength;\n    }\n\n    const axisLineX = position === 'left' ? -spacingLeft : width + spacingRight;\n\n    return (\n      <g\n        className=\"rct-chart-axis rct-chart-axis-y\"\n        onMouseMove={this.handleOnMouseMove}\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n        onClick={this.handleOnClick}\n        aria-hidden=\"true\"\n      >\n        {showGrid ? <YGrid {...gridProps} /> : null}\n\n        {showTicks ? <YTicks {...ticksProps} /> : null}\n\n        {showLabels ? <YAxisLabels {...labelsProps} /> : null}\n\n        {showTitle ? <YAxisTitle {...titleProps} /> : null}\n\n        {showLine ? (\n          <line\n            className=\"rct-chart-axis-line rct-chart-axis-line-y\"\n            x1={axisLineX}\n            x2={axisLineX}\n            y1={-spacingTop}\n            y2={height + spacingBottom}\n            style={lineStyle}\n          />\n        ) : null}\n      </g>\n    );\n  }\n}\n"],"file":"YAxis.js"}