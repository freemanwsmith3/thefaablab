{"version":3,"sources":["src/XAxisTitle.js"],"names":["XAxisTitle","React","Component","getMargin","props","propsWithDefaults","defaultProps","distance","position","rotate","placement","zeroMargin","marginTop","marginBottom","marginLeft","marginRight","title","children","style","titleWithStyle","Object","assign","text","measured","marginValue","Math","ceil","width","value","height","render","alignment","spacingTop","spacingBottom","posY","translateY","translateX","textAnchor","dy","PropTypes","number","oneOf","bool","object","string","any","fontFamily","fontSize","fontWeight","lineHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport defaults from 'lodash/defaults';\nimport measureText from './utils/measureText';\nimport PropTypes from 'prop-types';\n\nexport default class XAxisTitle extends React.Component {\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    /**\n     * Title distance from X Axis\n     */\n    distance: PropTypes.number,\n    /**\n     * Position of title in regards to the x axis. Accepted options are \"top\" or \"bottom\"\n     */\n    position: PropTypes.oneOf(['top', 'bottom']),\n    /**\n     * Placement of title in regards to the x axis. Accepted options are \"above\" or \"below\"\n     */\n    placement: PropTypes.oneOf(['above', 'below']),\n    alignment: PropTypes.oneOf(['left', 'center', 'right']),\n    rotate: PropTypes.bool,\n    /**\n     * Object declaring styles for label.\n     *\n     * Disclaimer: labelStyle will merge its defaults with the given labelStyle prop\n     * in order to ensure that our collision library measureText is able to calculate the\n     * smallest amount of possible collisions along the axis. It's therefore dependent on\n     * fontFamily, size and fontStyle to always be passed in. If you're looking to have a centralized\n     * stylesheet, we suggest creating a styled title component that wraps XAxisTitle with your preferred styles.\n     */\n    style: PropTypes.object,\n    /**\n     * Spacing - provided by XYPlot\n     */\n    spacingTop: PropTypes.number,\n    /**\n     * Spacing - provided by XYPlot\n     */\n    spacingBottom: PropTypes.number,\n    title: PropTypes.string,\n    children: PropTypes.any,\n  };\n  static defaultProps = {\n    height: 250,\n    width: 400,\n    distance: 5,\n    position: 'bottom',\n    alignment: 'center',\n    rotate: false,\n    style: {\n      fontFamily: 'Helvetica, sans-serif',\n      fontSize: '24px',\n      fontWeight: 'bold',\n      lineHeight: 1,\n    },\n    spacingTop: 0,\n    spacingBottom: 0,\n  };\n\n  static getMargin(props) {\n    const propsWithDefaults = defaults({}, props, XAxisTitle.defaultProps);\n    const { distance, position, rotate } = propsWithDefaults;\n    const placement =\n      propsWithDefaults.placement ||\n      (position === 'bottom' ? 'below' : 'above');\n    const zeroMargin = {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0,\n    };\n\n    if (\n      (position === 'bottom' && placement === 'above') ||\n      (position === 'top' && placement === 'below')\n    )\n      return zeroMargin;\n\n    const title = propsWithDefaults.title || propsWithDefaults.children;\n    const style = defaults(\n      propsWithDefaults.style,\n      XAxisTitle.defaultProps.style,\n    );\n    const titleWithStyle = Object.assign({ text: title }, style);\n    const measured = measureText(titleWithStyle);\n\n    const marginValue =\n      distance +\n      Math.ceil(rotate ? measured.width.value : measured.height.value);\n\n    return position === 'bottom'\n      ? { ...zeroMargin, marginBottom: marginValue }\n      : { ...zeroMargin, marginTop: marginValue };\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      distance,\n      position,\n      alignment,\n      style,\n      spacingTop,\n      spacingBottom,\n    } = this.props;\n    const title = this.props.title || this.props.children;\n    const placement =\n      this.props.placement || (position === 'bottom' ? 'below' : 'above');\n    const rotate = this.props.rotate ? -90 : 0;\n\n    const posY = position === 'bottom' ? height + spacingBottom : -spacingTop;\n    const translateY = posY + (placement === 'above' ? -distance : distance);\n    const translateX =\n      alignment === 'center' ? width / 2 : alignment === 'right' ? width : 0;\n\n    const textAnchor =\n      rotate && placement === 'above'\n        ? 'start'\n        : rotate && placement === 'below'\n        ? 'end'\n        : alignment === 'left'\n        ? 'start'\n        : alignment === 'right'\n        ? 'end'\n        : 'middle';\n\n    const dy =\n      rotate && alignment === 'right'\n        ? '-0.2em'\n        : rotate && alignment === 'center'\n        ? '0.3em'\n        : rotate\n        ? '0.8em'\n        : placement === 'below'\n        ? '0.8em'\n        : '-0.2em';\n\n    return (\n      <g\n        transform={`translate(${translateX},${translateY})`}\n        aria-hidden=\"true\"\n      >\n        <text\n          style={{ ...style, textAnchor }}\n          transform={`rotate(${rotate})`}\n          dy={dy}\n        >\n          {title}\n        </text>\n      </g>\n    );\n  }\n}\n"],"file":"XAxisTitle.js"}