{"version":3,"sources":["src/FunnelChart.js"],"names":["FunnelChart","React","Component","getDomain","props","data","xScaleType","yScaleType","x","y","horizontal","xAccessor","yAccessor","xDataType","yDataType","xDomain","d","i","yDomain","shouldComponentUpdate","nextProps","shouldUpdate","render","xScale","yScale","color","pathStyle","pathClassName","funnelArea","x0","x1","y0","y1","colors","schemeCategory10","domain","map","pathStr","fill","style","stroke","PropTypes","array","isRequired","CustomPropTypes","valueOrAccessor","oneOfType","string","func","bool","object"],"mappings":"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","sourcesContent":["import { area } from 'd3-shape';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport range from 'lodash/range';\nimport defaults from 'lodash/defaults';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport {\n  combineDomains,\n  domainFromData,\n  getValue,\n  makeAccessor2,\n} from './utils/Data';\nimport { dataTypeFromScaleType } from './utils/Scale';\nimport xyPropsEqual from './utils/xyPropsEqual';\n\n/**\n * `FunnelChart` is used to visualize the progressive reduction of data as it passes\n * from one phase to another.\n */\nexport default class FunnelChart extends React.Component {\n  static propTypes = {\n    /**\n     * Array of data to be plotted.\n     */\n    data: PropTypes.array.isRequired,\n    /**\n     * Accessor function for X values, called once per datum, or a single value to be used for all data.\n     */\n    x: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for Y values, called once per datum, or a single value to be used for all data.\n     */\n    y: CustomPropTypes.valueOrAccessor,\n    /**\n     * Color applied to the path element,\n     * or accessor function which returns a class.\n     *\n     * Note that the first datum's color would not be applied since it fills in the area of the path\n     */\n    color: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * Boolean which determines whether the chart will be horizontal.\n     */\n    horizontal: PropTypes.bool,\n    /**\n     * Classname applied to each path element,\n     * or accessor function which returns a class.\n     */\n    pathClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * Style applied to each path element,\n     * or accessor function which returns a style object.\n     */\n    pathStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * D3 scale for X axis - provided by XYPlot.\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for Y axis - provided by XYPlot.\n     */\n    yScale: PropTypes.func,\n  };\n  static defaultProps = {\n    pathClassName: '',\n    pathStyle: {},\n  };\n\n  static getDomain(props) {\n    const { data, xScaleType, yScaleType, x, y, horizontal } = props;\n    const [xAccessor, yAccessor] = [makeAccessor2(x), makeAccessor2(y)];\n    const [xDataType, yDataType] = [\n      dataTypeFromScaleType(xScaleType),\n      dataTypeFromScaleType(yScaleType),\n    ];\n\n    return horizontal\n      ? {\n          xDomain: combineDomains([\n            domainFromData(data, xAccessor, xDataType),\n            domainFromData(data, (d, i) => -xAccessor(d, i), xDataType),\n          ]),\n          yDomain: domainFromData(data, yAccessor, yDataType),\n        }\n      : {\n          xDomain: domainFromData(data, xAccessor, xDataType),\n          yDomain: combineDomains([\n            domainFromData(data, yAccessor, yDataType),\n            domainFromData(data, (d, i) => -yAccessor(d, i), yDataType),\n          ]),\n        };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, []);\n    return shouldUpdate;\n  }\n\n  render() {\n    const {\n      data,\n      xScale,\n      yScale,\n      color,\n      pathStyle,\n      x,\n      y,\n      horizontal,\n      pathClassName,\n    } = this.props;\n\n    const funnelArea = area();\n    if (horizontal) {\n      funnelArea\n        .x0((d, i) => xScale(-getValue(x, d, i)))\n        .x1((d, i) => xScale(getValue(x, d, i)))\n        .y((d, i) => yScale(getValue(y, d, i)));\n    } else {\n      funnelArea\n        .x((d, i) => xScale(getValue(x, d, i)))\n        .y0((d, i) => yScale(-getValue(y, d, i)))\n        .y1((d, i) => yScale(getValue(y, d, i)));\n    }\n\n    const colors = scaleOrdinal(schemeCategory10).domain(range(10));\n\n    return (\n      <g className=\"rct-funnel-chart\" aria-hidden=\"true\">\n        {data.map((d, i) => {\n          if (i === 0) return null;\n          const pathStr = funnelArea([data[i - 1], d]);\n          const fill = color ? getValue(color, d, i) : colors(i - 1);\n          let style = getValue(pathStyle, d, i);\n\n          style = defaults({}, style, { fill, stroke: 'transparent' });\n\n          return (\n            <path\n              d={pathStr}\n              className={`${getValue(pathClassName, d, i) || ''}`}\n              style={style}\n              key={i}\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n"],"file":"FunnelChart.js"}