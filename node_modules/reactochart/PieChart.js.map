{"version":3,"sources":["src/PieChart.js"],"names":["DEFAULT_SIZE","PieChart","React","Component","e","d","props","onMouseEnterSlice","onMouseMoveSlice","onMouseLeaveSlice","onMouseEnterLine","onMouseMoveLine","onMouseLeaveLine","onClick","renderMarkerLine","pathData","markerLineClassName","markerLineStyle","lineD","value","markerLineValue","onMouseEnter","onMouseMove","onMouseLeave","map","eventName","callback","renderSliceLabel","slice","center","radius","index","getPieSliceLabel","pieSliceLabelStyle","pieSliceLabelDistance","labelPercent","end","start","style","textAnchor","dominantBaseline","Object","assign","r","x","Math","sin","PI","y","cos","renderCenterLabel","centerLabelStyle","centerLabelClassName","centerLabel","render","marginLeft","marginRight","marginTop","marginBottom","holeRadius","width","height","min","data","total","markerLineOverhangInner","markerLineOverhangOuter","pieSliceClassName","valueAccessor","sum","newTotal","markerLinePercent","isFinite","startPercent","slices","slicePercent","i","className","pathStr","pieSlicePath","key","pieSliceStyle","markerLine","PropTypes","array","isRequired","CustomPropTypes","getter","number","string","object","func","oneOfType","percentValue","overhangOuter","overhangInner","startX","startY","c","rH","x0","y0","r0","r1","max","join","endPercent","parsedEndPercent","endX","endY","largeArc","x1","y1","concat"],"mappings":"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","sourcesContent":["import sumBy from 'lodash/sumBy';\nimport isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { methodIfFuncProp, bindTrailingArgs } from './util.js';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport { getValue, makeAccessor } from './utils/Data';\n\n// default height/width, used only if height & width & radius are all undefined\nconst DEFAULT_SIZE = 150;\n\n/**\n * `PieChart` is a circular graphic that is divided into slices to illustrate proportions or percentages.\n */\nclass PieChart extends React.Component {\n  static propTypes = {\n    /**\n     * Array of data to plot with pie chart.\n     */\n    data: PropTypes.array.isRequired,\n    /* Accessor function for getting the pie slices plotted on the pie chart.\n     * If not provided, just uses the data value itself at given index.\n     */\n    slice: CustomPropTypes.getter.isRequired,\n    /**\n     * Total expected sum of all the pie slice values.\n     * If provided && slices don't add up to total, an \"empty\" slice will be rendered for the rest\n     * If not provided, will be the sum of all values (ie. all values will always add up to 100%)\n     */\n    total: PropTypes.number,\n    /**\n     * Optional width of the SVG\n     * if not passed in and height is passed in, same # is used for both (ie. width=100 means height=100 also)\n     * if neither is passed, but radius is, radius+margins is used\n     * if neither is passed, and radius isn't either, 150 is used\n     */\n    width: PropTypes.number,\n    /**\n     * Optional height of the SVG\n     * if not passed in and width is passed in, same # is used for both (ie. width=100 means height=100 also)\n     * if neither is passed, but radius is, radius+margins is used\n     * if neither is passed, and radius isn't either, 150 is used\n     */\n    height: PropTypes.number,\n    /**\n     * Optional radius of the pie chart, inferred from margin/width/height if not provided.\n     */\n    radius: PropTypes.number,\n    marginTop: PropTypes.number,\n    marginBottom: PropTypes.number,\n    marginLeft: PropTypes.number,\n    marginRight: PropTypes.number,\n    /**\n     * Optional radius of the \"donut hole\" circle drawn on top of the pie chart to turn it into a donut chart.\n     */\n    holeRadius: PropTypes.number,\n    /**\n     * Optional label text to display in the middle of the pie/donut.\n     */\n    centerLabel: PropTypes.string,\n    /**\n     * Class attribute to be applied to center label.\n     */\n    centerLabelClassName: PropTypes.string,\n    /**\n     * Inline style object to be applied to center label.\n     */\n    centerLabelStyle: PropTypes.object,\n    /**\n     * Accessor for getting labels that are rendered outside each slice of the pie chart.\n     * If not provided no labels will be rendered.\n     */\n    getPieSliceLabel: PropTypes.func,\n    /**\n     * Inline style object applied to each slice label.\n     * When a function is provided it will receive the value for the slice and should return the\n     * style object for that slice's label.\n     * Used along with `getPieSliceLabel`.\n     */\n    pieSliceLabelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * Distance to render the label from the outer edge of the pie chart. Positive numbers will\n     * move away from the center and negative numbers will move toward the center.\n     * When a function is provided it will receive the value for the slice and should return the\n     * distance for that slice's label.\n     * Used along with `getPieSliceLabel`.\n     */\n    pieSliceLabelDistance: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.func,\n    ]),\n    /**\n     * Class attribute to be applied to each pie slice,\n     * or accessor function which returns a class.\n     */\n    pieSliceClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * Inline style object applied to each pie slice.\n     * When a function is provided it will receive the value and index for the\n     * slice as its parameters, and should return the style object for the slice.\n     */\n    pieSliceStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * Value for where to place markerline.\n     */\n    markerLineValue: PropTypes.number,\n    /**\n     * Class attribute to be applied to marker line.\n     */\n    markerLineClassName: PropTypes.string,\n    /**\n     * Inline style object to be applied to marker line.\n     */\n    markerLineStyle: PropTypes.object,\n    /**\n     * Number of pixels marker line hangs inside the pie chart.\n     */\n    markerLineOverhangInner: PropTypes.number,\n    /**\n     * Number of pixels marker line hangs outside the pie chart.\n     */\n    markerLineOverhangOuter: PropTypes.number,\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters the marker line.\n     */\n    onMouseEnterLine: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within the marker line.\n     */\n    onMouseMoveLine: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves the marker line.\n     */\n    onMouseLeaveLine: PropTypes.func,\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters a pie slice.\n     */\n    onMouseEnterSlice: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within a pie slice.\n     */\n    onMouseMoveSlice: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves a pie slice.\n     */\n    onMouseLeaveSlice: PropTypes.func,\n    /**\n     * `click` event handler callback, called when user click a pie slice.\n     */\n    onClick: PropTypes.func,\n  };\n  static defaultProps = {\n    centerLabelClassName: '',\n    centerLabelStyle: {},\n    pieSliceClassName: '',\n    pieSliceStyle: {},\n    markerLineClassName: '',\n    markerLineOverhangInner: 2,\n    markerLineOverhangOuter: 2,\n    markerLineStyle: {},\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    marginRight: 0,\n  };\n\n  onMouseEnterSlice = (e, d) => {\n    this.props.onMouseEnterSlice(e, d);\n  };\n  onMouseMoveSlice = (e, d) => {\n    this.props.onMouseMoveSlice(e, d);\n  };\n  onMouseLeaveSlice = (e, d) => {\n    this.props.onMouseLeaveSlice(e, d);\n  };\n\n  onMouseEnterLine = (e, d) => {\n    this.props.onMouseEnterLine(e, d);\n  };\n  onMouseMoveLine = (e, d) => {\n    this.props.onMouseMoveLine(e, d);\n  };\n  onMouseLeaveLine = (e, d) => {\n    this.props.onMouseLeaveLine(e, d);\n  };\n  onClick = (e, d) => {\n    this.props.onClick(e, d);\n  };\n\n  renderMarkerLine(pathData) {\n    const { markerLineClassName, markerLineStyle } = this.props;\n    const lineD = {\n      value: this.props.markerLineValue,\n    };\n\n    const [onMouseEnter, onMouseMove, onMouseLeave, onClick] = [\n      'onMouseEnterLine',\n      'onMouseMoveLine',\n      'onMouseLeaveLine',\n      'onClick',\n    ].map(eventName => {\n      // partially apply this line's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return isFunction(callback) ? bindTrailingArgs(callback, lineD) : null;\n    });\n\n    return (\n      <path\n        style={markerLineStyle}\n        className={`rct-marker-line ${markerLineClassName}`}\n        d={pathData}\n        {...{ onMouseEnter, onMouseMove, onMouseLeave, onClick }}\n      />\n    );\n  }\n\n  renderSliceLabel(value, slice, center, radius, index) {\n    const {\n      getPieSliceLabel,\n      pieSliceLabelStyle,\n      pieSliceLabelDistance,\n    } = this.props;\n    const labelPercent = (slice.end - slice.start) / 2 + slice.start;\n    const style = {\n      textAnchor: 'middle',\n      dominantBaseline: 'central',\n    };\n\n    if (pieSliceLabelStyle) {\n      Object.assign(style, getValue(pieSliceLabelStyle, value));\n    }\n\n    const r = pieSliceLabelDistance\n      ? radius + getValue(pieSliceLabelDistance, value)\n      : radius;\n    const x = center.x + Math.sin((2 * Math.PI) / (1 / labelPercent)) * r;\n    const y = center.y - Math.cos((2 * Math.PI) / (1 / labelPercent)) * r;\n\n    return (\n      <text key={index} x={x} y={y} style={style}>\n        {getPieSliceLabel(value)}\n      </text>\n    );\n  }\n\n  renderCenterLabel(center) {\n    const { centerLabelStyle, centerLabelClassName, centerLabel } = this.props;\n    const { x, y } = center;\n    const style = Object.assign(\n      {},\n      { textAnchor: 'middle', dominantBaseline: 'central' },\n      centerLabelStyle,\n    );\n\n    return (\n      <text\n        className={`rct-pie-label-center ${centerLabelClassName}`}\n        {...{ x, y, style }}\n      >\n        {centerLabel}\n      </text>\n    );\n  }\n\n  render() {\n    const {\n      marginLeft,\n      marginRight,\n      marginTop,\n      marginBottom,\n      holeRadius,\n    } = this.props;\n\n    // sizes fallback based on provided info: given dimension -> radius + margin -> other dimension -> default\n    const width =\n      this.props.width ||\n      (this.props.radius\n        ? this.props.radius * 2 + marginLeft + marginRight\n        : this.props.height) ||\n      DEFAULT_SIZE;\n    const height =\n      this.props.height ||\n      (this.props.radius\n        ? this.props.radius * 2 + marginTop + marginBottom\n        : this.props.width) ||\n      DEFAULT_SIZE;\n    const radius =\n      this.props.radius ||\n      Math.min(\n        (width - (marginLeft + marginRight)) / 2,\n        (height - (marginTop + marginBottom)) / 2,\n      );\n    const center = { x: marginLeft + radius, y: marginTop + radius };\n\n    const {\n      data,\n      total,\n      centerLabel,\n      getPieSliceLabel,\n      markerLineValue,\n      markerLineOverhangInner,\n      markerLineOverhangOuter,\n      pieSliceClassName,\n    } = this.props;\n\n    const valueAccessor = makeAccessor(this.props.slice);\n    const sum = sumBy(data, valueAccessor);\n    const newTotal = total || sum;\n    const markerLinePercent = isFinite(markerLineValue)\n      ? markerLineValue / newTotal\n      : null;\n\n    let startPercent = 0;\n    const slices = data.map(d => {\n      const slicePercent = valueAccessor(d) / newTotal;\n      const slice = {\n        start: startPercent,\n        end: startPercent + slicePercent,\n      };\n      startPercent += slicePercent;\n\n      return slice;\n    });\n\n    return (\n      <svg className=\"rct-pie-chart\" {...{ width, height }}>\n        {data.map((d, i) => {\n          const [onMouseEnter, onMouseMove, onMouseLeave, onClick] = [\n            'onMouseEnterSlice',\n            'onMouseMoveSlice',\n            'onMouseLeaveSlice',\n            'onClick',\n          ].map(eventName => {\n            // partially apply this slice's data point as 2nd callback argument\n            const callback = methodIfFuncProp(eventName, this.props, this);\n            return isFunction(callback) ? bindTrailingArgs(callback, d) : null;\n          });\n\n          const className = `rct-pie-slice rct-pie-slice-${i} ${getValue(\n            pieSliceClassName,\n            d,\n            i,\n          ) || ''}`;\n          const slice = slices[i];\n          const pathStr = pieSlicePath(\n            slice.start,\n            slice.end,\n            center,\n            radius,\n            holeRadius,\n          );\n          const key = `pie-slice-${i}`;\n\n          return (\n            <path\n              {...{\n                className,\n                d: pathStr,\n                onMouseEnter,\n                onMouseMove,\n                onMouseLeave,\n                onClick,\n                key,\n                style: getValue(this.props.pieSliceStyle, d, i),\n              }}\n            />\n          );\n        })}\n\n        {sum < newTotal ? ( // draw empty slice if the sum of slices is less than expected total\n          <path\n            className=\"rct-pie-slice rct-pie-slice-empty\"\n            d={pieSlicePath(startPercent, 1, center, radius, holeRadius)}\n            key=\"pie-slice-empty\"\n          />\n        ) : null}\n\n        {markerLinePercent !== null && isFinite(markerLinePercent)\n          ? this.renderMarkerLine(\n              markerLine(\n                markerLinePercent,\n                center,\n                radius,\n                holeRadius,\n                markerLineOverhangOuter,\n                markerLineOverhangInner,\n              ),\n            )\n          : null}\n\n        {centerLabel ? this.renderCenterLabel(center) : null}\n        {getPieSliceLabel\n          ? data.map((d, i) =>\n              this.renderSliceLabel(d, slices[i], center, radius, i),\n            )\n          : null}\n      </svg>\n    );\n  }\n}\n\nfunction markerLine(\n  percentValue,\n  center,\n  radius,\n  holeRadius = 0,\n  overhangOuter = 0,\n  overhangInner = 0,\n) {\n  const startX = Math.sin((2 * Math.PI) / (1 / percentValue));\n  const startY = Math.cos((2 * Math.PI) / (1 / percentValue));\n  const [c, r, rH, x0, y0] = [center, radius, holeRadius, startX, startY];\n  const [r0, r1] = [Math.max(rH - overhangInner, 0), r + overhangOuter];\n\n  return [\n    // construct a string representing the marker line\n    `M ${c.x + x0 * r0},${c.y - y0 * r0}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + x0 * r1},${c.y - y0 * r1} z`, // straight line to outer circle, along radius\n  ].join(' ');\n}\n\nfunction pieSlicePath(\n  startPercent,\n  endPercent,\n  center,\n  radius,\n  holeRadius = 0,\n) {\n  let parsedEndPercent = endPercent;\n\n  if (parsedEndPercent === 1) {\n    parsedEndPercent = 0.9999999; // arc cannot be a full circle\n  }\n\n  const startX = Math.sin((2 * Math.PI) / (1 / startPercent));\n  const startY = Math.cos((2 * Math.PI) / (1 / startPercent));\n  const endX = Math.sin((2 * Math.PI) / (1 / parsedEndPercent));\n  const endY = Math.cos((2 * Math.PI) / (1 / parsedEndPercent));\n\n  const largeArc = parsedEndPercent - startPercent <= 0.5 ? 0 : 1;\n  const [c, r, rH, x0, x1, y0, y1] = [\n    center,\n    radius,\n    holeRadius,\n    startX,\n    endX,\n    startY,\n    endY,\n  ];\n\n  return [\n    // construct a string representing the pie slice path\n    `M ${c.x + x0 * rH},${c.y - y0 * rH}`, // start at edge of inner (hole) circle, or center if no hole\n    `L ${c.x + x0 * r},${c.y - y0 * r}`, // straight line to outer circle, along radius\n    `A ${r},${r} 0 ${largeArc} 1 ${c.x + x1 * r},${c.y - y1 * r}`, // outer arc\n  ]\n    .concat(\n      holeRadius\n        ? [\n            // if we have an inner (donut) hole, draw an inner arc too, otherwise we're done\n            `L ${c.x + x1 * rH},${c.y - y1 * rH}`, // straight line to inner (hole) circle, along radius\n            `A ${rH},${rH} 0 ${largeArc} 0 ${c.x + x0 * rH},${c.y - y0 * rH} z`, // inner arc\n          ]\n        : 'z',\n    )\n    .join(' ');\n}\n\nexport default PieChart;\n"],"file":"PieChart.js"}