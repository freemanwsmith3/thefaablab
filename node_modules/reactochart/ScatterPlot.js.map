{"version":3,"sources":["src/ScatterPlot.js"],"names":["ScatterPlot","React","Component","e","d","props","onMouseEnterPoint","onMouseMovePoint","onMouseLeavePoint","i","onMouseEnter","onMouseMove","onMouseLeave","map","eventName","callback","xScale","yScale","x","y","pointRadius","pointOffset","pointStyle","pointClassName","pointSymbol","className","style","symbolProps","key","type","r","cx","cy","Object","assign","textAnchor","dominantBaseline","cloneElement","shouldComponentUpdate","nextProps","shouldUpdate","render","data","renderPoint","PropTypes","array","isRequired","CustomPropTypes","valueOrAccessor","func","number","oneOfType","node","arrayOf","object","string"],"mappings":"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","sourcesContent":["import isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nimport isNumber from 'lodash/isNumber';\nimport isUndefined from 'lodash/isUndefined';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { methodIfFuncProp, bindTrailingArgs } from './util.js';\nimport * as CustomPropTypes from './utils/CustomPropTypes';\nimport { getValue } from './utils/Data';\nimport xyPropsEqual from './utils/xyPropsEqual';\n\n/**\n * `ScatterPlot` displays its data as a collection of points. Each point represents\n * the relationship between two variables, one plotted along the x-axis and the other on the y-axis.\n */\nexport default class ScatterPlot extends React.Component {\n  static propTypes = {\n    /**\n     * Array of data to be plotted.\n     */\n    data: PropTypes.array.isRequired,\n    /**\n     * Accessor function for plot X values, called once per datum, or a single value to be used for all points.\n     */\n    x: CustomPropTypes.valueOrAccessor,\n    /**\n     * Accessor function for plot Y values, called once per datum, or a single value to be used for all points.\n     */\n    y: CustomPropTypes.valueOrAccessor,\n    /**\n     * D3 scale for X axis - provided by XYPlot.\n     */\n    xScale: PropTypes.func,\n    /**\n     * D3 scale for Y axis - provided by XYPlot.\n     */\n    yScale: PropTypes.func,\n    /**\n     * Used with the default point symbol (circle), defines the circle radius.\n     */\n    pointRadius: PropTypes.number,\n    /**\n     * Text or SVG node to use as custom point symbol, or function which returns text/SVG.\n     */\n    pointSymbol: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    /**\n     * Manual x and y offset applied to the point to center it, for custom point symbols which can't be auto-centered.\n     */\n    pointOffset: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * Inline style object to be applied to each point,\n     * or accessor function which returns a style object.\n     */\n    pointStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    /**\n     * Class attribute to be applied to each point,\n     * or accessor function which returns a class.\n     */\n    pointClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * `mouseenter` event handler callback, called when user's mouse enters a point.\n     */\n    onMouseEnterPoint: PropTypes.func,\n    /**\n     * `mousemove` event handler callback, called when user's mouse moves within a point.\n     */\n    onMouseMovePoint: PropTypes.func,\n    /**\n     * `mouseleave` event handler callback, called when user's mouse leaves a point.\n     */\n    onMouseLeavePoint: PropTypes.func,\n  };\n  static defaultProps = {\n    pointRadius: 3,\n    pointSymbol: <circle />,\n    pointOffset: [0, 0],\n    pointStyle: {},\n    pointClassName: '',\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const shouldUpdate = !xyPropsEqual(this.props, nextProps, ['pointStyle']);\n    return shouldUpdate;\n  }\n  // todo: implement getSpacing or getPadding static\n\n  onMouseEnterPoint = (e, d) => {\n    this.props.onMouseEnterPoint(e, d);\n  };\n  onMouseMovePoint = (e, d) => {\n    this.props.onMouseMovePoint(e, d);\n  };\n  onMouseLeavePoint = (e, d) => {\n    this.props.onMouseLeavePoint(e, d);\n  };\n\n  renderPoint = (d, i) => {\n    const [onMouseEnter, onMouseMove, onMouseLeave] = [\n      'onMouseEnterPoint',\n      'onMouseMovePoint',\n      'onMouseLeavePoint',\n    ].map(eventName => {\n      // partially apply this bar's data point as 2nd callback argument\n      const callback = methodIfFuncProp(eventName, this.props, this);\n      return isFunction(callback) ? bindTrailingArgs(callback, d) : null;\n    });\n    const {\n      xScale,\n      yScale,\n      x,\n      y,\n      pointRadius,\n      pointOffset,\n      pointStyle,\n      pointClassName,\n    } = this.props;\n    let { pointSymbol } = this.props;\n    const className = `rct-chart-scatterplot-point ${getValue(\n      pointClassName,\n      d,\n      i,\n    )}`;\n    const style = getValue(pointStyle, d, i);\n    const symbolProps = {\n      className,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      key: `scatter-point-${i}`,\n    };\n\n    // resolve symbol-generating functions into real symbols\n    if (isFunction(pointSymbol)) pointSymbol = pointSymbol(d, i);\n    // wrap string/number symbols in <text> container\n    if (isString(pointSymbol) || isNumber(pointSymbol))\n      pointSymbol = <text>{pointSymbol}</text>;\n    // use props.pointRadius for circle radius\n    if (pointSymbol.type === 'circle' && isUndefined(pointSymbol.props.r))\n      symbolProps.r = pointRadius;\n\n    // x,y coords of center of symbol\n    const cx = xScale(getValue(x, d, i)) + pointOffset[0];\n    const cy = yScale(getValue(y, d, i)) + pointOffset[1];\n\n    // set positioning attributes based on symbol type\n    if (pointSymbol.type === 'circle' || pointSymbol.type === 'ellipse') {\n      Object.assign(symbolProps, { cx, cy, style: { ...style } });\n    } else if (pointSymbol.type === 'text') {\n      Object.assign(symbolProps, {\n        x: cx,\n        y: cy,\n        style: { textAnchor: 'middle', dominantBaseline: 'central', ...style },\n      });\n    } else {\n      Object.assign(symbolProps, {\n        x: cx,\n        y: cy,\n        style: { ...style },\n      });\n    }\n\n    return React.cloneElement(pointSymbol, symbolProps);\n  };\n\n  render() {\n    return <g aria-hidden=\"true\">{this.props.data.map(this.renderPoint)}</g>;\n  }\n}\n"],"file":"ScatterPlot.js"}