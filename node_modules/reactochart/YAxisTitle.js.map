{"version":3,"sources":["src/YAxisTitle.js"],"names":["YAxisTitle","React","Component","getMargin","props","propsWithDefault","defaultProps","distance","position","rotate","placement","zeroMargin","marginTop","marginBottom","marginLeft","marginRight","title","children","style","titleWithStyle","Object","assign","text","measured","marginValue","Math","ceil","height","value","width","render","alignment","spacingLeft","spacingRight","posX","translateX","translateY","textAnchor","dy","PropTypes","number","oneOf","bool","object","string","any","fontFamily","fontSize","fontWeight","lineHeight"],"mappings":"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","sourcesContent":["import defaults from 'lodash/defaults';\nimport measureText from './utils/measureText';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class YAxisTitle extends React.Component {\n  static propTypes = {\n    height: PropTypes.number,\n    width: PropTypes.number,\n    /**\n     * Title distance from Y Axis\n     */\n    distance: PropTypes.number,\n    /**\n     * Position of title in regards to the y axis. Accepted options are \"left\" or \"right\"\n     */\n    position: PropTypes.oneOf(['left', 'right']),\n    alignment: PropTypes.oneOf(['top', 'middle', 'bottom']),\n    /**\n     * Placement of title in regards to the y axis. Accepted options are \"before\" or \"after\"\n     */\n    placement: PropTypes.oneOf(['before', 'after']),\n    rotate: PropTypes.bool,\n    /**\n     * Object declaring styles for label.\n     *\n     * Disclaimer: style will merge its defaults with the given style prop\n     * in order to ensure that our collision library measureText is able to calculate the\n     * smallest amount of possible collisions along the axis. It's therefore dependent on\n     * fontFamily, size and fontStyle to always be passed in. If you're looking to have a centralized\n     * stylesheet, we suggest creating a styled title component that wraps YAxisTitle with your preferred styles.\n     */\n    style: PropTypes.object,\n    /**\n     * Spacing - provided by XYPlot\n     */\n    spacingLeft: PropTypes.number,\n    /**\n     * Spacing - provided by XYPlot\n     */\n    spacingRight: PropTypes.number,\n    title: PropTypes.string,\n    children: PropTypes.any,\n  };\n\n  static defaultProps = {\n    height: 250,\n    width: 400,\n    distance: 5,\n    position: 'left',\n    alignment: 'middle',\n    rotate: true,\n    style: {\n      fontFamily: 'Helvetica, sans-serif',\n      fontSize: '24px',\n      fontWeight: 'bold',\n      lineHeight: 1,\n    },\n    spacingLeft: 0,\n    spacingRight: 0,\n  };\n\n  static getMargin(props) {\n    const propsWithDefault = defaults({}, props, YAxisTitle.defaultProps);\n    const { distance, position, rotate } = propsWithDefault;\n    const placement =\n      propsWithDefault.placement || (position === 'left' ? 'before' : 'after');\n    const zeroMargin = {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0,\n    };\n\n    if (\n      (position === 'left' && placement === 'after') ||\n      (position === 'right' && placement === 'before')\n    )\n      return zeroMargin;\n\n    const title = propsWithDefault.title || propsWithDefault.children;\n    const style = defaults(\n      propsWithDefault.style,\n      YAxisTitle.defaultProps.style,\n    );\n    const titleWithStyle = Object.assign({ text: title }, style);\n    const measured = measureText(titleWithStyle);\n\n    const marginValue =\n      distance +\n      Math.ceil(rotate ? measured.height.value : measured.width.value);\n\n    return position === 'left'\n      ? { ...zeroMargin, marginLeft: marginValue }\n      : { ...zeroMargin, marginRight: marginValue };\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      distance,\n      position,\n      alignment,\n      style,\n      spacingLeft,\n      spacingRight,\n    } = this.props;\n    const title = this.props.title || this.props.children;\n    const placement =\n      this.props.placement || (position === 'left' ? 'before' : 'after');\n\n    const rotate = this.props.rotate ? -90 : 0;\n    const posX = position === 'right' ? width + spacingRight : -spacingLeft;\n    const translateX = posX + (placement === 'before' ? -distance : distance);\n    const translateY =\n      alignment === 'middle' ? height / 2 : alignment === 'bottom' ? height : 0;\n    const textAnchor =\n      rotate && alignment === 'top'\n        ? 'end'\n        : rotate && alignment === 'middle'\n        ? 'middle'\n        : rotate && alignment === 'bottom'\n        ? 'start'\n        : placement === 'before'\n        ? 'end'\n        : 'start';\n    const dy =\n      rotate && placement === 'before'\n        ? '-0.2em'\n        : rotate\n        ? '0.8em'\n        : alignment === 'top'\n        ? '0.8em'\n        : alignment === 'middle'\n        ? '0.3em'\n        : null;\n\n    return (\n      <g\n        transform={`translate(${translateX},${translateY})`}\n        aria-hidden=\"true\"\n      >\n        <text\n          style={{ ...style, textAnchor }}\n          transform={`rotate(${rotate})`}\n          dy={dy}\n        >\n          {title}\n        </text>\n      </g>\n    );\n  }\n}\n"],"file":"YAxisTitle.js"}